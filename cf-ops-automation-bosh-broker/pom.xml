<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.4.2</version>
        <relativePath /> <!-- lookup parent from repository -->
    </parent>

    <modelVersion>4.0.0</modelVersion>

    <groupId>com.orange.oss.cloudfoundry.broker.opsautomation</groupId>
    <artifactId>cf-ops-automation-bosh-broker</artifactId>
    <version>1.6.0</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <rest-assured.version>4.4.0</rest-assured.version>
<!--        required by rest assuyred, see https://stackoverflow.com/a/62950421/1484823-->
        <groovy.version>3.0.2</groovy.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.orange.oss.cloudfoundry.broker.opsautomation</groupId>
            <artifactId>cf-ops-automation-broker-core</artifactId>
            <version>1.6.0</version>
        </dependency>
        <dependency>
            <groupId>com.orange.oss.cloudfoundry.broker.opsautomation</groupId>
            <artifactId>spring-boot-starter-servicebroker-catalog</artifactId>
            <version>1.6.0</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <!-- need to use spring-mock-mvc to pull right dependencies with spring, see https://stackoverflow.com/a/61020708/1484823 -->
            <!--            <artifactId>rest-assured</artifactId>-->
            <artifactId>spring-mock-mvc</artifactId>
            <version>${rest-assured.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.tomakehurst</groupId>
            <artifactId>wiremock-standalone</artifactId>
            <version>2.27.2</version>
            <scope>test</scope>
        </dependency>
        <!-- See https://stackoverflow.com/questions/4963300/which-notnull-java-annotation-should-i-use -->
        <!-- and https://www.jetbrains.com/help/idea/nullable-and-notnull-annotations.html -->
        <!-- https://mvnrepository.com/artifact/org.jetbrains/annotations -->
        <dependency>
            <groupId>org.jetbrains</groupId>
            <artifactId>annotations</artifactId>
            <version>21.0.1</version>
        </dependency>

        <!-- turn on verbose logging of requests during tests. In production, we can use the actuator endpoint or the logging route service instead
        <dependency>
            <groupId>org.zalando</groupId>
            <artifactId>logbook-spring-boot-starter</artifactId>
            <version>1.5.0</version>
        </dependency>
        -->


    </dependencies>


    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <!-- include commit hash into jar MANIFEST.MD
               Inspired from https://stackoverflow.com/questions/40446275/include-git-commit-hash-in-jar-version -->
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>get-the-git-infos</id>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                        <phase>validate</phase>
                    </execution>
                </executions>
                <configuration>
                    <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifestEntries>
                            <SCM-Revision>${git.commit.id.describe} with msg: ${git.commit.message.short} from ${git.build.user.name} at ${git.build.time}</SCM-Revision>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
        </plugins>
    </build>

  <scm>
    <tag>v1.6.0</tag>
  </scm>
</project>
